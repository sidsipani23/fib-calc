name: Deploy React app to EKS

on:
  workflow_run:
    workflows: ["Frontend unit tests"]
    branches: [main]
    types:
      - completed

env:
  AWS_REGION: ap-south-1               
  EKS_CLUSTER_NAME: fib-calc-k8s  
  SHA: ${{ github.sha }}

jobs:
  publish-to-hub:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Publish to Docker Hub
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get the version
      id: vars
      run: echo "tag=${{ github.sha }}" >> $GITHUB_OUTPUT

    - name: Build and push Docker images
      run: |-
        docker build -t sidsipani23/fib-calc-client:latest -t sidsipani23/fib-calc-client:${{ steps.vars.outputs.tag }} -f ./client/Dockerfile ./client
        docker build -t sidsipani23/fib-calc-server:latest -t sidsipani23/fib-calc-server:${{ steps.vars.outputs.tag }} -f ./server/Dockerfile ./server
        docker build -t sidsipani23/fib-calc-worker:latest -t sidsipani23/fib-calc-worker:${{ steps.vars.outputs.tag }} -f ./worker/Dockerfile ./worker
        docker push sidsipani23/fib-calc-client:latest
        docker push sidsipani23/fib-calc-server:latest
        docker push sidsipani23/fib-calc-worker:latest
        docker push sidsipani23/fib-calc-client:${{ steps.vars.outputs.tag }}
        docker push sidsipani23/fib-calc-server:${{ steps.vars.outputs.tag }}
        docker push sidsipani23/fib-calc-worker:${{ steps.vars.outputs.tag }}

  setup-and-deploy:
    needs: publish-to-hub
    name: Setup and Deploy to EKS
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ap-south-1

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

    - name: Get the version
      id: vars
      run: echo "tag=${{ github.sha }}" >> $GITHUB_OUTPUT

    - name: Deploy to EKS
      run: |-
        kubectl apply -f k8s/ --validate=false
        kubectl set image deployments/server-deployment server=sidsipani23/fib-calc-server:${{ steps.vars.outputs.tag }} --validate=false
        kubectl set image deployments/client-deployment client=sidsipani23/fib-calc-client:${{ steps.vars.outputs.tag }} --validate=false
        kubectl set image deployments/worker-deployment worker=sidsipani23/fib-calc-worker:${{ steps.vars.outputs.tag }} --validate=false
        kubectl get services -o wide